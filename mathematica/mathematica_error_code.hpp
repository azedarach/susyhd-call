// ====================================================================
// Error codes for Mathematica link
// ====================================================================

#ifndef MATHEMATICA_ERROR_CODES_H
#define MATHEMATICA_ERROR_CODES_H

#include "mathematica_config.h"

#ifdef ENABLE_MATHLINK_H
#include <mathlink.h>
#else
#include <wstp.h>
#endif

namespace mathematica {

#ifdef ENABLE_MATHLINK_H
enum Error_code : int {
   UNKNOWN_ERROR = MLEUNKNOWN,
   SUCCESS = MLEOK,
   DEAD_LINK = MLEDEAD,
   BAD_DATA = MLEGBAD,
   OUT_OF_SEQUENCE_GET = MLEGSEQ,
   BAD_TOKEN = MLEPBTK,
   OUT_OF_SEQUENCE_PUT = MLEPSEQ,
   PUT_TOO_MUCH_DATA = MLEPBIG,
   OVERFLOW = MLEOVFL,
   OUT_OF_MEMORY = MLEMEM,
   DENIED_SOCKET = MLEACCEPT,
   UNCONNECTED = MLECONNECT,
   CLOSED_CONNECTION = MLECLOSED,
   INTERNAL_ERROR_DEPTH = MLEDEPTH,
   DUPLICATE_STREAM_FAIL = MLENODUPFCN,
   NO_ACK = MLENOACK,
   NO_DATA = MLENODATA,
   NOT_DELIVERED = MLENOTDELIVERED,
   NO_MSG = MLENOMSG,
   FAILED = MLEFAILED,
   GET_END_EXPR = MLEGETENDEXPR,
   BAD_END_PACKET_CALL = MLEPUTENDPACKET,
   UNREAD_PACKET = MLENEXTPACKET,
   UNKNOWN_PACKET = MLEUNKNOWNPACKET,
   UNEXPECTED_END_PACKET = MLEGETENDPACKET,
   ABORTED_CALL = MLEABORT,
   INTERNAL_ERROR_MORE = MLEMORE,
   NEW_LIB = MLENEWLIB,
   OLD_LIB = MLEOLDLIB,
   BAD_PARAM = MLEBADPARAM,
   NOT_IMPLEMENTED = MLENOTIMPLEMENTED,
   UNINITIALIZED_ENV = MLEINIT,
   INSUFFICIENT_ARGS = MLEARGV,
   UNAVAILABLE_PROTOCOL = MLEPROTOCOL,
   UNAVAILABLE_MODE = MLEMODE,
   UNSUPPORTED_LAUNCH = MLELAUNCH,
   NO_REPEATED_LAUNCH = MLELAUNCHAGAIN,
   NO_LAUNCH_SPACE = MLELAUNCHSPACE,
   NO_PARENT = MLENOPARENT,
   LINK_NAME_TAKEN = MLENAMETAKEN,
   LINK_NOT_LISTENING = MLENOLISTEN,
   BAD_LINK_NAME = MLEBADNAME,
   BAD_HOST = MLEBADHOST,
   MISSING_RESOURCE = MLERESOURCE,
   LAUNCH_FAILED = MLELAUNCHFAILED,
   BAD_LAUNCH_NAME = MLELAUNCHNAME,
   BAD_DATA_ENC = MLEPDATABAD,
   CHAR_TO_LINK_ENC_FAIL = MLEPSCONVERT,
   LINK_TO_CHAR_ENC_FAIL = MLEGSCONVERT,
   NOT_EXECUTABLE = MLENOTEXE,
   FAILED_SYNC_OBJECT = MLESYNCOBJECTMAKE,
   BACK_OUT = MLEBACKOUT,
#if MLINK_INTERFACE_VERSION >= 4
   UNRECOGNIZED_SYMBOL = MLEBADOPTSYM,
   UNRECOGNIZED_STRING = MLEBADOPTSTR,
   NEED_BIGGER_BUFFER = MLENEEDBIGGERBUFFER,
   BAD_NUMERICS_ID = MLEBADNUMERICSID,
   SERVICE_NOT_AVAILABLE = MLESERVICENOTAVAILABLE,
   BAD_ARGUMENT = MLEBADARGUMENT,
   BAD_DISCOVERY_HOST_NAME = MLEBADDISCOVERYHOSTNAME,
   BAD_DISCOVERY_DOMAIN_NAME = MLEBADDISCOVERYDOMAINNAME,
   BAD_SERVICE_NAME = MLEBADSERVICENAME,
   BAD_DISCOVERY_STATE = MLEBADDISCOVERYSTATE,
   BAD_DISCOVERY_FLAGS = MLEBADDISCOVERYFLAGS,
   DISCOVERY_NAME_COLLISION = MLEDISCOVERYNAMECOLLISION,
   BAD_SERVICE_DISCOVERY = MLEBADSERVICEDISCOVERY,
#endif
   LAST = MLELAST
};
#else
enum Error_code : int {
   UNKNOWN_ERROR = WSEUNKNOWN,
   SUCCESS = WSEOK,
   DEAD_LINK = WSEDEAD,
   BAD_DATA = WSEGBAD,
   OUT_OF_SEQUENCE_GET = WSEGSEQ,
   BAD_TOKEN = WSEPBTK,
   OUT_OF_SEQUENCE_PUT = WSEPSEQ,
   PUT_TOO_MUCH_DATA = WSEPBIG,
   OVERFLOW = WSEOVFL,
   OUT_OF_MEMORY = WSEMEM,
   DENIED_SOCKET = WSEACCEPT,
   UNCONNECTED = WSECONNECT,
   CLOSED_CONNECTION = WSECLOSED,
   INTERNAL_ERROR_DEPTH = WSEDEPTH,
   DUPLICATE_STREAM_FAIL = WSENODUPFCN,
   NO_ACK = WSENOACK,
   NO_DATA = WSENODATA,
   NOT_DELIVERED = WSENOTDELIVERED,
   NO_MSG = WSENOMSG,
   FAILED = WSEFAILED,
   GET_END_EXPR = WSEGETENDEXPR,
   BAD_END_PACKET_CALL = WSEPUTENDPACKET,
   UNREAD_PACKET = WSENEXTPACKET,
   UNKNOWN_PACKET = WSEUNKNOWNPACKET,
   UNEXPECTED_END_PACKET = WSEGETENDPACKET,
   ABORTED_CALL = WSEABORT,
   INTERNAL_ERROR_MORE = WSEMORE,
   NEW_LIB = WSENEWLIB,
   OLD_LIB = WSEOLDLIB,
   BAD_PARAM = WSEBADPARAM,
   NOT_IMPLEMENTED = WSENOTIMPLEMENTED,
   UNINITIALIZED_ENV = WSEINIT,
   INSUFFICIENT_ARGS = WSEARGV,
   UNAVAILABLE_PROTOCOL = WSEPROTOCOL,
   UNAVAILABLE_MODE = WSEMODE,
   UNSUPPORTED_LAUNCH = WSELAUNCH,
   NO_REPEATED_LAUNCH = WSELAUNCHAGAIN,
   NO_LAUNCH_SPACE = WSELAUNCHSPACE,
   NO_PARENT = WSENOPARENT,
   LINK_NAME_TAKEN = WSENAMETAKEN,
   LINK_NOT_LISTENING = WSENOLISTEN,
   BAD_LINK_NAME = WSEBADNAME,
   BAD_HOST = WSEBADHOST,
   MISSING_RESOURCE = WSERESOURCE,
   LAUNCH_FAILED = WSELAUNCHFAILED,
   BAD_LAUNCH_NAME = WSELAUNCHNAME,
   BAD_DATA_ENC = WSEPDATABAD,
   CHAR_TO_LINK_ENC_FAIL = WSEPSCONVERT,
   LINK_TO_CHAR_ENC_FAIL = WSEGSCONVERT,
   NOT_EXECUTABLE = WSENOTEXE,
   FAILED_SYNC_OBJECT = WSESYNCOBJECTMAKE,
   BACK_OUT = WSEBACKOUT,
#if MLINK_INTERFACE_VERSION >= 4
   UNRECOGNIZED_SYMBOL = WSEBADOPTSYM,
   UNRECOGNIZED_STRING = WSEBADOPTSTR,
   NEED_BIGGER_BUFFER = WSENEEDBIGGERBUFFER,
   BAD_NUMERICS_ID = WSEBADNUMERICSID,
   SERVICE_NOT_AVAILABLE = WSESERVICENOTAVAILABLE,
   BAD_ARGUMENT = WSEBADARGUMENT,
   BAD_DISCOVERY_HOST_NAME = WSEBADDISCOVERYHOSTNAME,
   BAD_DISCOVERY_DOMAIN_NAME = WSEBADDISCOVERYDOMAINNAME,
   BAD_SERVICE_NAME = WSEBADSERVICENAME,
   BAD_DISCOVERY_STATE = WSEBADDISCOVERYSTATE,
   BAD_DISCOVERY_FLAGS = WSEBADDISCOVERYFLAGS,
   DISCOVERY_NAME_COLLISION = WSEDISCOVERYNAMECOLLISION,
   BAD_SERVICE_DISCOVERY = WSEBADSERVICEDISCOVERY,
#endif
   LAST = WSELAST
};
#endif

} // namespace mathematica

#endif
