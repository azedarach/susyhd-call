// ====================================================================
// Error codes for Mathematica link
// ====================================================================

#ifndef MATHEMATICA_ERROR_CODES_H
#define MATHEMATICA_ERROR_CODES_H

#include "mathematica_config.h"

#ifdef ENABLE_MATHLINK_H
#include <mathlink.h>
#else
#include <wstp.h>
#endif

namespace mathematica {

#ifdef ENABLE_MATHLINK_H
enum Error_code : int {
   MLINK_UNKNOWN_ERROR = MLEUNKNOWN,
   MLINK_SUCCESS = MLEOK,
   MLINK_DEAD_LINK = MLEDEAD,
   MLINK_BAD_DATA = MLEGBAD,
   MLINK_OUT_OF_SEQUENCE_GET = MLEGSEQ,
   MLINK_BAD_TOKEN = MLEPBTK,
   MLINK_OUT_OF_SEQUENCE_PUT = MLEPSEQ,
   MLINK_PUT_TOO_MUCH_DATA = MLEPBIG,
   MLINK_OVERFLOW = MLEOVFL,
   MLINK_OUT_OF_MEMORY = MLEMEM,
   MLINK_DENIED_SOCKET = MLEACCEPT,
   MLINK_UNCONNECTED = MLECONNECT,
   MLINK_CLOSED_CONNECTION = MLECLOSED,
   MLINK_INTERNAL_ERROR_DEPTH = MLEDEPTH,
   MLINK_DUPLICATE_STREAM_FAIL = MLENODUPFCN,
   MLINK_NO_ACK = MLENOACK,
   MLINK_NO_DATA = MLENODATA,
   MLINK_NOT_DELIVERED = MLENOTDELIVERED,
   MLINK_NO_MSG = MLENOMSG,
   MLINK_FAILED = MLEFAILED,
   MLINK_GET_END_EXPR = MLEGETENDEXPR,
   MLINK_BAD_END_PACKET_CALL = MLEPUTENDPACKET,
   MLINK_UNREAD_PACKET = MLENEXTPACKET,
   MLINK_UNKNOWN_PACKET = MLEUNKNOWNPACKET,
   MLINK_UNEXPECTED_END_PACKET = MLEGETENDPACKET,
   MLINK_ABORTED_CALL = MLEABORT,
   MLINK_INTERNAL_ERROR_MORE = MLEMORE,
   MLINK_NEW_LIB = MLENEWLIB,
   MLINK_OLD_LIB = MLEOLDLIB,
   MLINK_BAD_PARAM = MLEBADPARAM,
   MLINK_NOT_IMPLEMENTED = MLENOTIMPLEMENTED,
   MLINK_UNINITIALIZED_ENV = MLEINIT,
   MLINK_INSUFFICIENT_ARGS = MLEARGV,
   MLINK_UNAVAILABLE_PROTOCOL = MLEPROTOCOL,
   MLINK_UNAVAILABLE_MODE = MLEMODE,
   MLINK_UNSUPPORTED_LAUNCH = MLELAUNCH,
   MLINK_NO_REPEATED_LAUNCH = MLELAUNCHAGAIN,
   MLINK_NO_LAUNCH_SPACE = MLELAUNCHSPACE,
   MLINK_NO_PARENT = MLENOPARENT,
   MLINK_LINK_NAME_TAKEN = MLENAMETAKEN,
   MLINK_LINK_NOT_LISTENING = MLENOLISTEN,
   MLINK_BAD_LINK_NAME = MLEBADNAME,
   MLINK_BAD_HOST = MLEBADHOST,
   MLINK_MISSING_RESOURCE = MLERESOURCE,
   MLINK_LAUNCH_FAILED = MLELAUNCHFAILED,
   MLINK_BAD_LAUNCH_NAME = MLELAUNCHNAME,
   MLINK_BAD_DATA_ENC = MLEPDATABAD,
   MLINK_CHAR_TO_LINK_ENC_FAIL = MLEPSCONVERT,
   MLINK_LINK_TO_CHAR_ENC_FAIL = MLEGSCONVERT,
   MLINK_NOT_EXECUTABLE = MLENOTEXE,
   MLINK_FAILED_SYNC_OBJECT = MLESYNCOBJECTMAKE,
   MLINK_BACK_OUT = MLEBACKOUT,
#if MLINK_INTERFACE_VERSION >= 4
   MLINK_UNRECOGNIZED_SYMBOL = MLEBADOPTSYM,
   MLINK_UNRECOGNIZED_STRING = MLEBADOPTSTR,
   MLINK_NEED_BIGGER_BUFFER = MLENEEDBIGGERBUFFER,
   MLINK_BAD_NUMERICS_ID = MLEBADNUMERICSID,
   MLINK_SERVICE_NOT_AVAILABLE = MLESERVICENOTAVAILABLE,
   MLINK_BAD_ARGUMENT = MLEBADARGUMENT,
   MLINK_BAD_DISCOVERY_HOST_NAME = MLEBADDISCOVERYHOSTNAME,
   MLINK_BAD_DISCOVERY_DOMAIN_NAME = MLEBADDISCOVERYDOMAINNAME,
   MLINK_BAD_SERVICE_NAME = MLEBADSERVICENAME,
   MLINK_BAD_DISCOVERY_STATE = MLEBADDISCOVERYSTATE,
   MLINK_BAD_DISCOVERY_FLAGS = MLEBADDISCOVERYFLAGS,
   MLINK_DISCOVERY_NAME_COLLISION = MLEDISCOVERYNAMECOLLISION,
   MLINK_BAD_SERVICE_DISCOVERY = MLEBADSERVICEDISCOVERY,
#endif
   MLINK_LAST = MLELAST
};
#else
enum Error_code : int {
   MLINK_UNKNOWN_ERROR = WSEUNKNOWN,
   MLINK_SUCCESS = WSEOK,
   MLINK_DEAD_LINK = WSEDEAD,
   MLINK_BAD_DATA = WSEGBAD,
   MLINK_OUT_OF_SEQUENCE_GET = WSEGSEQ,
   MLINK_BAD_TOKEN = WSEPBTK,
   MLINK_OUT_OF_SEQUENCE_PUT = WSEPSEQ,
   MLINK_PUT_TOO_MUCH_DATA = WSEPBIG,
   MLINK_OVERFLOW = WSEOVFL,
   MLINK_OUT_OF_MEMORY = WSEMEM,
   MLINK_DENIED_SOCKET = WSEACCEPT,
   MLINK_UNCONNECTED = WSECONNECT,
   MLINK_CLOSED_CONNECTION = WSECLOSED,
   MLINK_INTERNAL_ERROR_DEPTH = WSEDEPTH,
   MLINK_DUPLICATE_STREAM_FAIL = WSENODUPFCN,
   MLINK_NO_ACK = WSENOACK,
   MLINK_NO_DATA = WSENODATA,
   MLINK_NOT_DELIVERED = WSENOTDELIVERED,
   MLINK_NO_MSG = WSENOMSG,
   MLINK_FAILED = WSEFAILED,
   MLINK_GET_END_EXPR = WSEGETENDEXPR,
   MLINK_BAD_END_PACKET_CALL = WSEPUTENDPACKET,
   MLINK_UNREAD_PACKET = WSENEXTPACKET,
   MLINK_UNKNOWN_PACKET = WSEUNKNOWNPACKET,
   MLINK_UNEXPECTED_END_PACKET = WSEGETENDPACKET,
   MLINK_ABORTED_CALL = WSEABORT,
   MLINK_INTERNAL_ERROR_MORE = WSEMORE,
   MLINK_NEW_LIB = WSENEWLIB,
   MLINK_OLD_LIB = WSEOLDLIB,
   MLINK_BAD_PARAM = WSEBADPARAM,
   MLINK_NOT_IMPLEMENTED = WSENOTIMPLEMENTED,
   MLINK_UNINITIALIZED_ENV = WSEINIT,
   MLINK_INSUFFICIENT_ARGS = WSEARGV,
   MLINK_UNAVAILABLE_PROTOCOL = WSEPROTOCOL,
   MLINK_UNAVAILABLE_MODE = WSEMODE,
   MLINK_UNSUPPORTED_LAUNCH = WSELAUNCH,
   MLINK_NO_REPEATED_LAUNCH = WSELAUNCHAGAIN,
   MLINK_NO_LAUNCH_SPACE = WSELAUNCHSPACE,
   MLINK_NO_PARENT = WSENOPARENT,
   MLINK_LINK_NAME_TAKEN = WSENAMETAKEN,
   MLINK_LINK_NOT_LISTENING = WSENOLISTEN,
   MLINK_BAD_LINK_NAME = WSEBADNAME,
   MLINK_BAD_HOST = WSEBADHOST,
   MLINK_MISSING_RESOURCE = WSERESOURCE,
   MLINK_LAUNCH_FAILED = WSELAUNCHFAILED,
   MLINK_BAD_LAUNCH_NAME = WSELAUNCHNAME,
   MLINK_BAD_DATA_ENC = WSEPDATABAD,
   MLINK_CHAR_TO_LINK_ENC_FAIL = WSEPSCONVERT,
   MLINK_LINK_TO_CHAR_ENC_FAIL = WSEGSCONVERT,
   MLINK_NOT_EXECUTABLE = WSENOTEXE,
   MLINK_FAILED_SYNC_OBJECT = WSESYNCOBJECTMAKE,
   MLINK_BACK_OUT = WSEBACKOUT,
#if MLINK_INTERFACE_VERSION >= 4
   MLINK_UNRECOGNIZED_SYMBOL = WSEBADOPTSYM,
   MLINK_UNRECOGNIZED_STRING = WSEBADOPTSTR,
   MLINK_NEED_BIGGER_BUFFER = WSENEEDBIGGERBUFFER,
   MLINK_BAD_NUMERICS_ID = WSEBADNUMERICSID,
   MLINK_SERVICE_NOT_AVAILABLE = WSESERVICENOTAVAILABLE,
   MLINK_BAD_ARGUMENT = WSEBADARGUMENT,
   MLINK_BAD_DISCOVERY_HOST_NAME = WSEBADDISCOVERYHOSTNAME,
   MLINK_BAD_DISCOVERY_DOMAIN_NAME = WSEBADDISCOVERYDOMAINNAME,
   MLINK_BAD_SERVICE_NAME = WSEBADSERVICENAME,
   MLINK_BAD_DISCOVERY_STATE = WSEBADDISCOVERYSTATE,
   MLINK_BAD_DISCOVERY_FLAGS = WSEBADDISCOVERYFLAGS,
   MLINK_DISCOVERY_NAME_COLLISION = WSEDISCOVERYNAMECOLLISION,
   MLINK_BAD_SERVICE_DISCOVERY = WSEBADSERVICEDISCOVERY,
#endif
   MLINK_LAST = WSELAST
};
#endif

} // namespace mathematica

#endif
